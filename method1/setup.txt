#METHOD I 
#Here we create a custom CA certificate which both Server and Client can trust

#Generate a CA Certificate for signing 
openssl req -new -x509 -nodes -days 365 -keyout selfca.key -out selfca.crt -subj '/CN=selfCA'

####Server-side steps

#Step1: Generate Private Key for the Server (Key Pair generation is clearer)
openssl genrsa -out server1.key 2048

#Step 2: Generate CSR  
openssl req -new -key server1.key -subj '/CN=localhost' -out server1.csr

#Step 3: Self signing (instead of sending the CSR it to an external CA). 
#This should generate a certificate (.crt) file which is the signed certificate for the server.
openssl x509 -req -in server1.csr -CA selfca.crt -CAkey selfca.key -CAcreateserial -out server1.crt -days 365

####Client-side steps (The certification generation process is the same as the server)

#Step 1: Generate Private Key for the Client
openssl genrsa -out client1.key 2048

#Step 2: Generate the CSR 
openssl req  -new -key client1.key -subj '/CN=localhost' -out client1.csr

#Step 3: Self signing (instead of sending the CSR it to an external CA). 
#This should generate a certificate (.crt) file which is the signed certificate for the client.
openssl x509 -req -in client1.csr -CA selfca.crt -CAkey selfca.key -CAcreateserial -out client1.crt -days 365


